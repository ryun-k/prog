<?xml version="1.0" encoding="UTF-8"  ?>
<!-- xml파일이 되기 위한 조건
	1. 첫번째 줄은 무조건 xml선언해야 한다  <?xml version="1.0" ?>
	2. 선언부에는 dtd,schema등을 선언할 수 있다
	    xml문서는 자유로운 구조,요소명, 속성명을 정의내릴 수 있는데
	    xml문서 작성법을 .dtd 혹은 스키마문서를 제시를 하여
	      작성방식을 제한할 수 있다
	      
	   기본적인 xml문서 작성규칙을 준수한 xml문서를 우리는 wellformed xml문서라하고
	   dtd혹은 schema를 따르는    wellformed xml문서는 valid하다고 말한다.
	   
	  참고 작성규칙
	  1. 최상위 요소(root element)는 단 한개여야만 한다
	  2. 모든 요소는 열고 닫아야 한다  
	  3. 속성은 값을 반드시 명시해야 한다
 -->
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" 
"HTTP://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
	<!-- 이 부분에서 myBatis에 관련된 환경설정을 한다 -->
	<!-- 기본 동작에 대한 환경 설정을 한다. -->
	<settings>
		<!-- 캐쉬 메모리 사용여부 -->
		<setting name="cacheEnabled" value="false" />
		<!-- 일반화 키 사용여부 -->
		<setting name="useGeneratedKeys" value="true" />
		<!-- 기본 질의 실행 방식 -->
		<setting name="defaultExecutorType" value="REUSE" />		
	</settings>
	
	<!-- 질의명령을 실행할 때 자바적인 데이터형태가 필요하다 
			 myBatis는 관계형데이터베이스를 중심으로 만든것이기 때문에
			 따라서 자바에서사용하는 데이터타입을 full name으로 등록해줘야 한다.
			 그런데 풀네임을 사용하면 불편하므로 별칭을 부여해서 사용하게 된다.
			 이때 이미 내장된 알리아스가 있으므로 중복되지 않도록 유의한다
	-->
	<typeAliases>
		<typeAlias alias="int" type="java.lang.Integer"/>
		<typeAlias alias="hMap" type="java.util.HashMap"/>

		<typeAlias alias="memberVO" type="sb.com.vo.MemberVO"/>
		<typeAlias alias="airVO" type="sb.com.vo.AirVO"/>

		<typeAlias alias="informationVO" type="sb.com.vo.InformationVO"/>
		<typeAlias alias="noticeVO" type="sb.com.vo.NoticeVo" />
		<typeAlias alias="qVO" type="sb.com.vo.QnaVo" />
		

	</typeAliases>	
	
	<!-- myBatis에서는 쿼리문을 xml파일을 이용해서 만들어 사용한다
			mappers요소에는  만들어진 SQL용 XML파일을 등록하는 부분이다
	 -->
	<mappers>

		<mapper resource="/sb/com/sql/MemberSQL.xml"/>
		<mapper resource="/sb/com/sql/AirportSQL.xml"/>
		<mapper resource="/sb/com/sql/InformationSQL.xml" />
		<mapper resource="/sb/com/sql/NoticeSQL.xml" />
		<mapper resource="/sb/com/sql/QnaSQL.xml" />
	 
	</mappers>
</configuration>









